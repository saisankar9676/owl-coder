def is_prime(n):
    primes = [True] * (n + 1)
    primes[0] = False
    primes[1] = False

    for i in range(2, int(n**0.5) + 1):
        if primes[i]:
            for j in range(i * i, n + 1, i):
                primes[j] = False

    return primes

def get_primes(r):
    ds = []
    prime=is_prime(r)
    for i in range(2, int(r**0.5) + 1):
        if prime[i]:
            ds.append(i)
    return ds

l, r = map(int, input().split())
length = r - l + 1
segment_sieve = [1] * length
help_primes = get_primes(r)
for i in help_primes:
    fm = (l // i) * i
    if fm < l:
        fm += i
    for j in range(max(i * i, fm), r+1, i):
        segment_sieve[j - l] = 0

for i in range(length):
    if segment_sieve[i] == 1:
        print(l + i,end=" ")